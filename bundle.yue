global yue = require "yue"
global lfs = require "lfs"
global colors = require "ansicolors"

global pudding_out = (msg) -> print "pudding - #{colors('%{blue}info')}: #{msg}"
global pudding_warn = (msg) -> print "pudding - #{colors('%{yellow}warn')}: #{msg}"
global pudding_success = (msg) -> print "pudding - #{colors('%{green}success')}: #{msg}"
global pudding_error = (msg) -> print "pudding - #{colors('%{red}error')}: #{msg}"


pudding_out "Starting bundle process."

Paths = {
    src: "./src/",
    build: "./build/"
}

BuiltGames = {}

for File in lfs.dir (Paths.src)
    continue if File::match "^[\.]"
    FullPath = "#{Paths.src}#{File}"
    Attributes = lfs.attributes FullPath
    if Attributes.mode == "file"
        File = io.open FullPath, "r"
        
        unless File
            pudding_warn "Failed to open file #{FullPath}."
            continue

        GameId = (File::read "*l")
        GameId = GameId::sub 3, #GameId-1

        Content = File::read "*all"
        File::close!

        pudding_out "Building yue file for game #{GameId}."

        Code, Err, Globals = yue.to_lua Content, {
            implicit_return_root: true
            reserve_line_number: true
            lint_global: true
            space_over_tab: false
            options: {
                target: "5.1"
                path: "/build"
            }
        }

        if Err
            pudding_error "There was an error while building #{FullPath}:"
            print Err
        else
            pudding_success "Built #{FullPath} without any issues."
            BuiltFile = io.open "#{Paths.build}#{FullPath::gsub ".yue", ".lua"}", "w"
            if BuiltFile
                BuiltFile::write Code
                BuiltFile::close!
                pudding_out "Saved built file to #{Paths.build}#{FullPath::gsub ".yue", ".lua"}"

            BuiltGames[GameId] = Code


BundledLoader = "-- Bundled loader; Pudding (by Ave)\n"
for GameId, Code in next, BuiltGames
    pudding_out "Bundling lua for game #{GameId}"

    BundledLoader = BundledLoader .. "if game.GameId == #{GameId} then \n#{Code}\nend\n"


File = io.open "#{Paths.build}loader.lua", "w"
if File
    File::write BundledLoader
    File::close!
    pudding_out "Saved bundled loader in #{Paths.build}loader.lua"
    pudding_success "Finished bundle process."
else
    pudding_error "Failed to open #{Paths.build}loader.lua"